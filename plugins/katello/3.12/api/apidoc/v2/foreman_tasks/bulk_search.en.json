{"docs":{"name":"Foreman","info":"\n\u003cp\u003eForeman API v2 is currently the default API version.\u003c/p\u003e\n","copyright":"","doc_url":"../../../apidoc/v2","api_url":"/api","resources":[{"doc_url":"../../../apidoc/v2/foreman_tasks","id":"foreman_tasks","api_url":"/api","name":"Foreman tasks","short_description":null,"full_description":"","version":"v2","formats":null,"metadata":null,"methods":[{"doc_url":"../../../apidoc/v2/foreman_tasks/bulk_search","name":"bulk_search","apis":[{"api_url":"/foreman_tasks/api/tasks/bulk_search","http_method":"POST","short_description":"List dynflow tasks for uuids","deprecated":null}],"formats":null,"full_description":"\n\u003cp\u003eFor every search it returns the list of tasks that satisfty the condition. The reason for supporting multiple searches is the UI that might be ending needing periodic updates on task status for various searches at the same time. This way, it is possible to get all the task statuses with one request.\u003c/p\u003e\n","errors":[],"params":[{"name":"location_id","full_name":"location_id","description":"\n\u003cp\u003eScope by locations\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"Integer","expected_type":"numeric","metadata":null,"show":true,"validations":[]},{"name":"organization_id","full_name":"organization_id","description":"\n\u003cp\u003eScope by organizations\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"Integer","expected_type":"numeric","metadata":null,"show":true,"validations":[]},{"name":"searches","full_name":"searches","description":"\n\u003cp\u003eList of uuids to fetch info about\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"Must be an Array of nested elements","expected_type":"array","metadata":null,"show":true,"validations":[],"params":[{"name":"search_id","full_name":"searches[search_id]","description":"\n\u003cp\u003eArbitraty value for client to identify the the request parts with results. It’s passed in the results to be able to pair the requests and responses properly.\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"type","full_name":"searches[type]","description":"","required":false,"allow_nil":false,"allow_blank":false,"validator":"Must be one of: \u003ccode\u003euser\u003c/code\u003e, \u003ccode\u003eresource\u003c/code\u003e, \u003ccode\u003etask\u003c/code\u003e.","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"task_id","full_name":"searches[task_id]","description":"\n\u003cp\u003eIn case :type = ‘task’, find the task by the uuid\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"user_id","full_name":"searches[user_id]","description":"\n\u003cp\u003eIn case :type = ‘user’, find tasks for the user\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"resource_type","full_name":"searches[resource_type]","description":"\n\u003cp\u003eIn case :type = ‘resource’, what resource type we’re searching the tasks for\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"resource_type","full_name":"searches[resource_type]","description":"\n\u003cp\u003eIn case :type = ‘resource’, what resource id we’re searching the tasks for\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"action_types","full_name":"searches[action_types]","description":"\n\u003cp\u003eReturn just tasks of given action type, e.g. [Actions::Katello::Repository::Synchronize]\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"Must be one of: \u003ccode\u003eString\u003c/code\u003e.","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"active_only","full_name":"searches[active_only]","description":"","required":false,"allow_nil":false,"allow_blank":false,"validator":"Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e, \u003ccode\u003e1\u003c/code\u003e, \u003ccode\u003e0\u003c/code\u003e.","expected_type":"boolean","metadata":null,"show":true,"validations":[]},{"name":"page","full_name":"searches[page]","description":"","required":false,"allow_nil":false,"allow_blank":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"per_page","full_name":"searches[per_page]","description":"","required":false,"allow_nil":false,"allow_blank":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]}]}],"returns":[],"examples":[],"metadata":null,"see":[],"headers":[],"show":true}],"headers":[],"deprecated":false}],"link_extension":".en.html"}}