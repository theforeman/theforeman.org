{"docs":{"name":"Foreman","info":"\n\u003cp\u003eForeman API v2 is currently the default API version.\u003c/p\u003e\n","copyright":"","doc_url":"../../apidoc/v2","api_url":"/api","resources":[{"doc_url":"../../apidoc/v2/foreman_tasks","id":"foreman_tasks","api_url":"/api","name":"Foreman tasks","short_description":null,"full_description":"","version":"v2","formats":null,"metadata":null,"methods":[{"doc_url":"../../apidoc/v2/foreman_tasks/summary","name":"summary","apis":[{"api_url":"/foreman_tasks/api/tasks/summary","http_method":"GET","short_description":"Show task summary","deprecated":null}],"formats":null,"full_description":"","errors":[],"params":[{"name":"location_id","full_name":"location_id","description":"\n\u003cp\u003eScope by locations\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"Integer","expected_type":"numeric","metadata":null,"show":true,"validations":[]},{"name":"organization_id","full_name":"organization_id","description":"\n\u003cp\u003eScope by organizations\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"Integer","expected_type":"numeric","metadata":null,"show":true,"validations":[]}],"returns":[],"examples":[],"metadata":null,"see":[],"headers":[],"show":true},{"doc_url":"../../apidoc/v2/foreman_tasks/show","name":"show","apis":[{"api_url":"/foreman_tasks/api/tasks/:id","http_method":"GET","short_description":"Show task details","deprecated":null}],"formats":null,"full_description":"","errors":[],"params":[{"name":"location_id","full_name":"location_id","description":"\n\u003cp\u003eScope by locations\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"Integer","expected_type":"numeric","metadata":null,"show":true,"validations":[]},{"name":"organization_id","full_name":"organization_id","description":"\n\u003cp\u003eScope by organizations\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"Integer","expected_type":"numeric","metadata":null,"show":true,"validations":[]},{"name":"id","full_name":"id","description":"\n\u003cp\u003eUUID of the task\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"string from 2 to 128 characters containing only alphanumeric characters, space, '_', '-' with no leading or trailing space..","expected_type":"string","metadata":null,"show":true,"validations":[]}],"returns":[],"examples":[],"metadata":null,"see":[],"headers":[],"show":true},{"doc_url":"../../apidoc/v2/foreman_tasks/bulk_search","name":"bulk_search","apis":[{"api_url":"/foreman_tasks/api/tasks/bulk_search","http_method":"POST","short_description":"List dynflow tasks for uuids","deprecated":null}],"formats":null,"full_description":"\n\u003cp\u003eFor every search it returns the list of tasks that satisfty the condition. The reason for supporting multiple searches is the UI that might be ending needing periodic updates on task status for various searches at the same time. This way, it is possible to get all the task statuses with one request.\u003c/p\u003e\n","errors":[],"params":[{"name":"location_id","full_name":"location_id","description":"\n\u003cp\u003eScope by locations\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"Integer","expected_type":"numeric","metadata":null,"show":true,"validations":[]},{"name":"organization_id","full_name":"organization_id","description":"\n\u003cp\u003eScope by organizations\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"Integer","expected_type":"numeric","metadata":null,"show":true,"validations":[]},{"name":"searches","full_name":"searches","description":"\n\u003cp\u003eList of uuids to fetch info about\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"Must be an Array of nested elements","expected_type":"array","metadata":null,"show":true,"validations":[],"params":[{"name":"search_id","full_name":"searches[search_id]","description":"\n\u003cp\u003eArbitraty value for client to identify the the request parts with results. It’s passed in the results to be able to pair the requests and responses properly.\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"type","full_name":"searches[type]","description":"","required":false,"allow_nil":false,"allow_blank":false,"validator":"Must be one of: \u003ccode\u003euser\u003c/code\u003e, \u003ccode\u003eresource\u003c/code\u003e, \u003ccode\u003etask\u003c/code\u003e.","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"task_id","full_name":"searches[task_id]","description":"\n\u003cp\u003eIn case :type = ‘task’, find the task by the uuid\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"user_id","full_name":"searches[user_id]","description":"\n\u003cp\u003eIn case :type = ‘user’, find tasks for the user\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"resource_type","full_name":"searches[resource_type]","description":"\n\u003cp\u003eIn case :type = ‘resource’, what resource type we’re searching the tasks for\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"resource_type","full_name":"searches[resource_type]","description":"\n\u003cp\u003eIn case :type = ‘resource’, what resource id we’re searching the tasks for\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"action_types","full_name":"searches[action_types]","description":"\n\u003cp\u003eReturn just tasks of given action type, e.g. [Actions::Katello::Repository::Synchronize]\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"Must be one of: \u003ccode\u003eString\u003c/code\u003e.","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"active_only","full_name":"searches[active_only]","description":"","required":false,"allow_nil":false,"allow_blank":false,"validator":"Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e, \u003ccode\u003e1\u003c/code\u003e, \u003ccode\u003e0\u003c/code\u003e.","expected_type":"boolean","metadata":null,"show":true,"validations":[]},{"name":"page","full_name":"searches[page]","description":"","required":false,"allow_nil":false,"allow_blank":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"per_page","full_name":"searches[per_page]","description":"","required":false,"allow_nil":false,"allow_blank":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]}]}],"returns":[],"examples":[],"metadata":null,"see":[],"headers":[],"show":true},{"doc_url":"../../apidoc/v2/foreman_tasks/bulk_resume","name":"bulk_resume","apis":[{"api_url":"/foreman_tasks/api/tasks/bulk_resume","http_method":"POST","short_description":"Resume all paused error tasks","deprecated":null}],"formats":null,"full_description":"","errors":[],"params":[{"name":"location_id","full_name":"location_id","description":"\n\u003cp\u003eScope by locations\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"Integer","expected_type":"numeric","metadata":null,"show":true,"validations":[]},{"name":"organization_id","full_name":"organization_id","description":"\n\u003cp\u003eScope by organizations\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"Integer","expected_type":"numeric","metadata":null,"show":true,"validations":[]},{"name":"search","full_name":"search","description":"\n\u003cp\u003eResume tasks matching search string\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"task_ids","full_name":"task_ids","description":"\n\u003cp\u003eResume specific tasks by ID\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"Must be an array of any type","expected_type":"array","metadata":null,"show":true,"validations":[]}],"returns":[],"examples":[],"metadata":null,"see":[],"headers":[],"show":true},{"doc_url":"../../apidoc/v2/foreman_tasks/index","name":"index","apis":[{"api_url":"/foreman_tasks/api/tasks","http_method":"GET","short_description":"List tasks","deprecated":null}],"formats":null,"full_description":"","errors":[],"params":[{"name":"location_id","full_name":"location_id","description":"\n\u003cp\u003eScope by locations\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"Integer","expected_type":"numeric","metadata":null,"show":true,"validations":[]},{"name":"organization_id","full_name":"organization_id","description":"\n\u003cp\u003eScope by organizations\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"Integer","expected_type":"numeric","metadata":null,"show":true,"validations":[]},{"name":"search","full_name":"search","description":"\n\u003cp\u003eSearch string\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"page","full_name":"page","description":"\n\u003cp\u003ePage number, starting at 1\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"Must be a number.","expected_type":"numeric","metadata":null,"show":true,"validations":[]},{"name":"per_page","full_name":"per_page","description":"\n\u003cp\u003eNumber of results per page to return\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"Must be a number.","expected_type":"numeric","metadata":null,"show":true,"validations":[]},{"name":"order","full_name":"order","description":"\n\u003cp\u003eSort field and order, e.g. ‘name DESC’\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"sort","full_name":"sort","description":"\n\u003cp\u003eHash version of ‘order’ param\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"Hash","expected_type":"hash","metadata":null,"show":true,"validations":[],"params":[{"name":"by","full_name":"sort[by]","description":"\n\u003cp\u003eField to sort the results on\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"order","full_name":"sort[order]","description":"\n\u003cp\u003eHow to order the sorted results (e.g. ASC for ascending)\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]}]}],"returns":[],"examples":[],"metadata":null,"see":[],"headers":[],"show":true},{"doc_url":"../../apidoc/v2/foreman_tasks/callback","name":"callback","apis":[{"api_url":"/foreman_tasks/api/tasks/callback","http_method":"POST","short_description":"Send data to the task from external executor (such as smart_proxy_dynflow)","deprecated":null}],"formats":null,"full_description":"","errors":[],"params":[{"name":"location_id","full_name":"location_id","description":"\n\u003cp\u003eScope by locations\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"Integer","expected_type":"numeric","metadata":null,"show":true,"validations":[]},{"name":"organization_id","full_name":"organization_id","description":"\n\u003cp\u003eScope by organizations\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"Integer","expected_type":"numeric","metadata":null,"show":true,"validations":[]},{"name":"callback","full_name":"callback","description":"","required":false,"allow_nil":false,"allow_blank":false,"validator":"Hash","expected_type":"hash","metadata":null,"show":true,"validations":[],"params":[{"name":"task_id","full_name":"callback[task_id]","description":"\n\u003cp\u003eUUID of the task\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"string from 2 to 128 characters containing only alphanumeric characters, space, '_', '-' with no leading or trailing space..","expected_type":"string","metadata":null,"show":true,"validations":[]},{"name":"step_id","full_name":"callback[step_id]","description":"\n\u003cp\u003eThe ID of the step inside the execution plan to send the event to\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"String","expected_type":"string","metadata":null,"show":true,"validations":[]}]},{"name":"data","full_name":"data","description":"\n\u003cp\u003eData to be sent to the action\u003c/p\u003e\n","required":false,"allow_nil":false,"allow_blank":false,"validator":"Hash","expected_type":"hash","metadata":null,"show":true,"validations":[]},{"name":"callbacks","full_name":"callbacks","description":"","required":false,"allow_nil":false,"allow_blank":false,"validator":"Must be an array of [[:callback, Hash, nil, {:param_group=\u003e{:scope=\u003eForemanTasks::Api::TasksController, :name=\u003e:callback_target, :options=\u003e{}, :from_concern=\u003efalse}}, #\u003cProc:0x000000000b240d78@/home/vagrant/foreman/.vendor/ruby/2.5.0/gems/foreman-tasks-0.15.1/app/controllers/foreman_tasks/api/tasks_controller.rb:153\u003e], [:data, Hash, {:desc=\u003e\"Data to be sent to the action\"}, {:param_group=\u003enil}, nil], [:callback, Hash, nil, {:param_group=\u003e{:scope=\u003eForemanTasks::Api::TasksController, :name=\u003e:callback_target, :options=\u003e{}, :from_concern=\u003efalse}}, #\u003cProc:0x000000000b23ef28@/home/vagrant/foreman/.vendor/ruby/2.5.0/gems/foreman-tasks-0.15.1/app/controllers/foreman_tasks/api/tasks_controller.rb:153\u003e], [:data, Hash, {:desc=\u003e\"Data to be sent to the action\"}, {:param_group=\u003enil}, nil], [:callbacks, Array, {:of=\u003e[...]}, {:param_group=\u003enil}, nil]]","expected_type":"array","metadata":null,"show":true,"validations":[]}],"returns":[],"examples":[],"metadata":null,"see":[],"headers":[],"show":true}],"headers":[],"deprecated":false}],"link_extension":".en.html"}}